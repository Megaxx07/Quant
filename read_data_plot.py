# -*- coding: utf-8 -*-
"""Read_data_plot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sjX1OwOsC6gGr0APl1WlM3OhxGgPYD9u
"""



"""# Python Pandas Datareader & Plotly

The pandas datareader can read a lot of financial data bases from different data vendors.
https://pandas-datareader.readthedocs.io/en/latest/
It's easy to use pandas datareader since it can directly read as pandas dataframe.
"""

import pandas as pd
import datetime as dt
from pandas_datareader import data as pdr
import  pandas_datareader.data as web
import yfinance as yf
yf.pdr_override() #can't use pdr to read data from yahoo, the symbol is failed to read.

end= dt.datetime.now()
start = end - dt.timedelta(days = 3000)
# start_1 = dt.datetime(2000,1,1)
start, end #, start_1

"""Get the stock's price, for Australian stocks, yahoo tickers require '.AX' to be specified at the end of the ticker symbol.

"""

stockList = ['CBA','NAB','WBC', 'ANZ']
stocks = [stock + '.AX' for stock in stockList]

stockData = web.get_data_yahoo(stocks,start,end)
# stockData = pdr.DataReader(stocks, 'yahoo', start, end)

# df = web.DataReader(stocks, 'yahoo', start, end)

stockData.head()

stockData.index

stockData.columns

Close = stockData.Close
Close.head()

Close.describe()

Close.describe(percentiles = [0.1, 0.5, 0.9])

# last 100 days
Close[Close.index > end - dt.timedelta(days = 100)].describe(percentiles = [0.1, 0.5, 0.9])

Close.plot(figsize = (12,8))

"""### Plotly"""

!pip install plotly

import plotly.offline as pyo # interactive plot
pyo.init_notebook_mode(connected= True)

pd.options.plotting.backend = 'plotly' # change plt to plotly, if only have this cell can plot successful directly in Jupyter Notebook.

import plotly.io as pio 
pio.renderers.default = "colab" # Using in colab

Close.plot()

Close['CBA.AX'].pct_change().plot(kind = 'hist')

from plotly.subplots import make_subplots

CBA = web.get_data_yahoo('CBA.AX',start,end)

CBA.head()

"""## Moving Average Terms
pandas.rolling function and specify the rolling window parameter.
By choosing a rolling window of 50/200, inherently this requires 50/200 rows of data before it can compute the mean.
We ebd up with NaN (Not a number), we can resolve this (if we would like to have a continuous MA throughout this period) by specifying the min_periods parameter.

Try to understand the above statement.
"""

CBA['MA50'] = CBA['Close'].rolling(window = 50, min_periods = 0).mean() # why after adding min_period the NaN disappered?
CBA['MA50'].head(20)

CBA['MA200'] = CBA['Close'].rolling(window = 200, min_periods = 0).mean()
CBA['MA200'].head(20)

import plotly.graph_objects as go

# Create plotly fig / subplot
fig = make_subplots(rows = 2, cols = 1, shared_xaxes= True,
                    vertical_spacing= 0.2, subplot_titles= ('CBA', 'Volume'),
                    row_width = [0.2,1.0]) # the row width didn't change from 0.7 -> 1.0

# Add Opend High Low Close candle stick graph
fig.add_trace(go.Candlestick(x =CBA.index, open = CBA['Open'], high = CBA.High, low = CBA.Low, close = CBA.Close, name = 'OHLC'), row = 1, col = 1)

# Add moving average terms
fig.add_trace(go.Scatter(x =CBA.index, y = CBA.MA50, marker_color = 'GREY', name = 'MA50'), row = 1, col = 1)
fig.add_trace(go.Scatter(x =CBA.index, y = CBA.MA200, marker_color = 'lightgrey', name = 'MA200'), row = 1, col = 1)

# Add volume bar chart in subplot
fig.add_trace(go.Bar(x =CBA.index, y = CBA.Volume, marker_color = 'red', showlegend = False), row = 2, col = 1)

# Update layout with appropraite label colors and sizes
fig.update_layout(
    title = 'CBA historical price chart',
    xaxis_tickfont_size = 12,
    yaxis = dict(
        title = 'Price ($/share)',
        titlefont_size = 14,
        tickfont_size = 12
    ),
    autosize = False,
    width = 1500,
    height = 800,
    margin = dict(l = 50, r = 50, t = 100, b = 100, pad = 5),
    paper_bgcolor = 'LightSteelBlue'
)

# Removw rangeslider from subplot
fig.update(layout_xaxis_rangeslider_visible = False)
fig.show()